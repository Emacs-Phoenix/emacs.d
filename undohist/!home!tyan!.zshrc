
((digest . "3333eeb0b98071684dbac08e70fcf180") (undo-list nil ("
# cd to the root of the current vcs repository
gr() {
    # vcsroot=`echo $vcs_info_msg_0_ | cut -d \"|\" -f 5`
    vcsroot=`/home/seebi/.vim/scripts/vcsroot.sh`
    echo $vcsroot && cd $vcsroot
}
" . 16413) ((marker . 16413) . -196) ((marker . 16567) . -55) ((marker . 16567) . -55) ((marker) . -48) ((marker) . -48) ((marker) . -1) ((marker) . -1) ((marker . 16552) . -194) ((marker . 16552) . -194) ((marker . 16554) . -111) ((marker . 16554) . -111) ((marker . 16553) . -161) ((marker . 16553) . -161) ((marker . 16488) . -196) ((marker . 16488) . -196) ((marker . 16413) . -196) ((marker) . -196) (t 22023 33442 798169 697000) nil ("# reloads all functions
# http://www.zsh.org/mla/users/2002/msg00232.html
r() {
    local f
    f=(~/.config/zsh/functions.d/*(.))
    unfunction $f:t 2> /dev/null
    autoload -U $f:t
}" . 16610) (t 22023 33432 294169 88000) (16611 . 16799) (t 22023 33409 54167 739000) (16415 . 16611) (t 22023 33319 922162 567000) (16344 . 16363) (t 22023 33101 90149 868000) (7395 . 7548) (t 22023 33086 354149 13000) ("alias	 cd..='cd ..'
alias	 ..='cd ..'
alias    ...='cd ../..'
alias    ....='cd ../../..'
alias -g ..='..'
alias -g ...='../..'
alias -g ....='../../..'
" . 7395) (t 22023 32991 134143 487000) (16344 . 16395) (t 22023 32886 634137 423000) (14319 . 14907) (t 22023 32874 282136 707000) (10610 . 14318) ("correct_all                  # Try to autocorrect commands & file names
setopt    hash_list_all                # [set] always make sure that the entire command path is hashed
setopt    short_loops                  # [unset] 'for i in *; echo $i;' instead of 'for i in *; do echo $i; done'
#setopt globdots                # with this, we could treat dotfiles the same as normal ones

setopt    interactive_comments         # with this, we can do 'some_evil_stuff # which we explain' and just execute some_evil_stuff
setopt    list_packed                  # [unset] show compact completion list
setopt    long_list_jobs               # [unset] show job number & PID when suspending
setopt no_clobber                      # this will probihbit 'cat foo > bar' if bar exists. use >! instead
setopt    extended_glob                # enables various things, most notably ^negation. '^', '#' and forgotwhich :/ see cheatsheet & http://zsh.dotsrc.org/Intro/intro_2.html#SEC2
setopt    numeric_glob_sort            # [unset] enables numeric order in globs
setopt    notify                       # [on] this will put info from finished background processes over the current line
setopt    function_arg_zero            # [on] this will fill $0 with the function name, not 'zsh'
# POSIX_BUILTINS                # find out about this one
setopt    complete_in_word             # [unset] tab completion within words

setopt    multios                      # this enables various goodness
# ls > foo > bar
# cmd > >(cmd1) > >(cmd2) # would redirect stdout from cmd to stdin of cmd1,2
# make install > /tmp/logfile | grep -i error
setopt    braceccl                     # {a-z} {0-2} etc expansion
setopt    prompt_subst                 # allow substition with $PS1, etc. Needed for vcs_info

autoload  compinit;compinit            # this enables autocompletion for pretty much everything
autoload  colors                       # use colors
colors
autoload  -Uz zmv                      # move function
autoload  -Uz zed                      # edit functions within zle

# move cursor between chars when typing '', \"\", (), [], and {}
magic-single-quotes()   { if [[ $LBUFFER[-1] == \\' ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \\' magic-single-quotes
magic-double-quotes()   { if [[ $LBUFFER[-1] == \\\" ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \\\" magic-double-quotes
magic-parentheses()     { if [[ $LBUFFER[-1] == \\( ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \\) magic-parentheses
magic-square-brackets() { if [[ $LBUFFER[-1] == \\[ ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \\] magic-square-brackets
magic-curly-brackets()  { if [[ $LBUFFER[-1] == \\{ ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \\} magic-curly-brackets
magic-angle-brackets()  { if [[ $LBUFFER[-1] == \\< ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \\> magic-angle-brackets
zle -N magic-single-quotes
zle -N magic-double-quotes
zle -N magic-parentheses
zle -N magic-square-brackets
zle -N magic-curly-brackets
zle -N magic-angle-brackets


autoload -U url-quote-magic
zle -N self-insert url-quote-magic

# colored filename/directory completion
# Attribute codes:
# 00 none  01 bold  04 underscore  05 blink  07 reverse  08 concealed
# Text color codes:
# 30 black  31 red  32 green  33 yellow  34 blue  35 magenta  36 cyan  37 white
# Background color codes:
# 40 black  41 red  42 green  43 yellow  44 blue  45 magenta  46 cyan  47 white
LS_COLORS='no=0:fi=0:di=1;34:ln=1;36:pi=40;33:so=1;35:do=1;35:bd=40;33;1:cd=40;33;1:or=40;31;1:ex=1;32:*.tar=1;31:*.tgz=1;31:*.arj=1;31:*.taz=1;31:*.lzh=1;31:*.zip=1;31:*.rar=1;31:*.z=1;31:*.Z=1;31:*.gz=1;31:*.bz2=1;31:*.tbz2=1;31:*.deb=1;31:*.pdf=1;31:*.jpg=1;35:*.jpeg=1;35:*.gif=1;35:*.bmp=1;35:*.pbm=1;35:*.pgm=1;35:*.ppm=1;35:*.pnm=1;35:*.tga=1;35:*.xbm=1;35:*.xpm=1;35:*.tif=1;35:*.tiff=1;35:*.png=1;35:*.mpg=1;35:*.mpeg=1;35:*.mov=1;35:*.avi=1;35:*.wmv=1;35:*.ogg=1;35:*.mp3=1;35:*.mpc=1;35:*.wav=1;35:*.au=1;35:*.swp=1;30:*.pl=36:*.c=36:*.cc=36:*.h=36:*.core=1;33;41:*.gpg=1;33:'" . 10610) (t 22023 32832 918134 306000) ("auto_cd                      # [unset] enables you to omit 'cd' before a path
setopt    " . 10610) (t 22022 53432 34272 35000) nil (16841 . 16847) (t 22022 53427 574272 234000) nil ("." . -16841) nil ("/" . -16842) (t 22022 53413 746272 851000) nil (16852 . 16853) nil (16841 . 16852) ("./.welc" . -16841) nil (16842 . 16848) nil (16841 . 16842) nil ("." . -16841) nil (16841 . 16842) nil ("w" . -16841) nil ("                              " . -15485) (8036 . 8037) (16868 . 16871) nil (16866 . 16868) (t 22022 53228 370281 115000) nil (nil rear-nonsticky nil 7546 . 7547) (nil fontified nil 7395 . 7547) (7395 . 7547) nil (7394 . 7396) (t 22022 53048 890289 117000) nil (864 . 865) (t 22022 53047 482289 180000) nil (" variables" . 864) nil (863 . 864) nil (875 . 883) nil (873 . 875) (t 22022 53038 146289 596000) nil (1718 . 1720) (t 22022 53036 802289 656000) nil (nil rear-nonsticky nil 1717 . 1718) (nil fontified nil 1712 . 1718) (nil fontified nil 1711 . 1712) (nil fontified nil 1701 . 1711) (nil fontified nil 1700 . 1701) (nil fontified nil 1694 . 1700) (nil fontified nil 1692 . 1694) (nil fontified nil 1678 . 1692) (nil fontified nil 1677 . 1678) (nil fontified nil 1665 . 1677) (nil fontified nil 1664 . 1665) (nil fontified nil 1658 . 1664) (nil fontified nil 1638 . 1658) (nil fontified nil 1636 . 1638) (1636 . 1718) nil (1635 . 1636) nil ("# output colored grep
export GREP_OPTIONS='--color=auto' 
export GREP_COLOR='7;31'" . 14690) nil (14773 . 14774) (t 22022 53024 430290 208000) nil ("
" . -14689) (t 22022 53023 30290 270000) nil (nil rear-nonsticky nil 14773 . 14774) (nil fontified nil 14691 . 14774) (14691 . 14774) (t 22022 53004 114291 114000) nil (nil rear-nonsticky nil 14687 . 14688) (nil fontified nil 13742 . 14688) (13742 . 14688) nil (13741 . 13742) (t 22022 52347 474320 390000) nil (7563 . 7564) (t 22022 52346 86320 451000) nil (7562 . 7563) (t 22022 52345 138320 494000) nil (nil rear-nonsticky nil 7561 . 7562) (nil fontified nil 7549 . 7562) (7549 . 7562) (t 22022 51964 110337 482000) nil ("startup () {
    # info on any running screens
    if [[ -x $(which screen) ]]
    then
	ZSHRC_SCREENLIST=(${${(M)${(f)\"$(screen -ls)\"}:#(#s)[[:space:]]##([0-9]##).*}/(#b)[[:space:]]#([0-9]##).*/$match[1]})
		                  if [[ $#ZSHRC_SCREENLIST -ge 1 ]]
		                  then
			              echo \"There are $#ZSHRC_SCREENLIST screens running. $ZSHRC_SCREENLIST\"
		                  fi
	                      fi

                                  ## TODO: Change to check /sys and build in rebuildrprompt()
                                  ##       maybe use /sys directly, if possible
                                  #	# check if acpitool is installed. if yes, tell rebuildrprompt to use it
                                  #	if [[ -x $(which acpitool) ]]
                                  #	then
                                  #		ZSHRC_ACPITOOL='1'
                                  #	fi

	                          startup_warnings

	                          buildPS1


	                          # change the terminals title if it's a xterm, konsole or the like
	                          header \"%l %n@%m: %~\"
                              }
" . 15662) (t 22022 51952 262338 10000) nil (16827 . 16828) nil (16796 . 16826) (16748 . 16774) (16655 . 16681) (16617 . 16643) (16572 . 16598) (16531 . 16565) (16475 . 16509) (16434 . 16468) (16368 . 16402) (16260 . 16294) (16180 . 16214) (16086 . 16120) (16060 . 16082) (16038 . 16056) (15951 . 15965) (15925 . 15943) (15871 . 15889) ("	" . -15751) ("    " . -15745) (15745 . 15749) ("	" . 15745) (15741 . 15745) ("    " . -15713) (15713 . 15717) ("	" . 15713) (15709 . 15713) ("    " . -15679) (15679 . 15683) ("	" . 15679) (15675 . 15679) (nil rear-nonsticky nil 16356 . 16357) (nil fontified nil 15662 . 16357) (15662 . 16357) (t 22022 51580 690354 576000) nil ("                              " . -15638) ("                              " . -15599) ("                              " . -15596) ("                              " . -15584) ("                              " . -15546) ("                              " . -15543) ("                              " . -15513) ("                              " . -15500) ("                              " . -15485) ("                              " . -15320) ("                              " . -15307) ("                              " . -15241) ("                              " . -15177) ("                              " . -15169) ("                              " . -15166) ("                              " . -15163) ("                              " . -15124) ("                              " . -15071) ("                              " . -15020) ("                              " . -14983) ("                              " . -14966) ("                              " . -14960) ("                              " . -14913) ("                              " . -14863) ("                              " . -14838) ("                              " . -14817) ("                              " . -14773) ("                              " . -14768) ("                              " . -14766) ("                              " . -14732) ("                              " . -14721) ("                              " . -14691) ("                              " . -14644) ("                              " . -14627) ("                              " . -14584) ("                              " . -14546) ("                              " . -14518) ("                              " . -14511) ("                              " . -14464) ("                              " . -14453) ("                              " . -14418) ("                              " . -14401) ("                              " . -14379) ("                              " . -14343) ("                              " . -14315) ("                              " . -14241) ("                              " . -14208) ("                              " . -14201) ("                              " . -14163) ("                              " . -14117) ("                              " . -14048) ("                              " . -13962) ("                              " . -13944) ("                              " . -13901) ("                              " . -13874) ("                              " . -13808) ("                              " . -13744) ("                              " . -13731) 13754 nil ("functon startup () {
    # info on any running screens
    if [[ -x $(which screen) ]]
    then
	ZSHRC_SCREENLIST=(${${(M)${(f)\"$(screen -ls)\"}:#(#s)[[:space:]]##([0-9]##).*}/(#b)[[:space:]]#([0-9]##).*/$match[1]})
		                  if [[ $#ZSHRC_SCREENLIST -ge 1 ]]
		                  then
			              echo \"There are $#ZSHRC_SCREENLIST screens running. $ZSHRC_SCREENLIST\"
		                  fi
	                      fi

                                  ## TODO: Change to check /sys and build in rebuildrprompt()
                                  ##       maybe use /sys directly, if possible
                                  #	# check if acpitool is installed. if yes, tell rebuildrprompt to use it
                                  #	if [[ -x $(which acpitool) ]]
                                  #	then
                                  #		ZSHRC_ACPITOOL='1'
                                  #	fi

	                          startup_warnings

	                          buildPS1


	                          # change the terminals title if it's a xterm, konsole or the like
	                          header \"%l %n@%m: %~\"
                              }" . 13727) (t 22022 51564 950355 278000) nil (13734 . 13735) ("                                       " . -12010) ("                                       " . -11932) ("                                       " . -11915) (15955 . 15989) ("    " . 15955) (13844 . 13851) nil (18600 . 18630) (18531 . 18561) (18498 . 18528) (18456 . 18486) (18388 . 18418) (18355 . 18385) (18295 . 18325) (18252 . 18282) (18207 . 18237) (18012 . 18042) (17969 . 17999) (17873 . 17903) (17779 . 17809) (17741 . 17771) (17708 . 17738) (17671 . 17705) ("    " . 17671) (17606 . 17636) (17523 . 17553) (17442 . 17472) (17375 . 17405) (17328 . 17358) (17288 . 17322) ("    " . 17288) (17215 . 17245) (17135 . 17165) (17076 . 17110) ("    " . 17076) (17029 . 17059) (16955 . 16985) (16920 . 16950) (16884 . 16918) ("    " . 16884) (16816 . 16854) ("        " . 16816) (16775 . 16813) ("        " . 16775) (16711 . 16753) ("            " . 16711) (16634 . 16676) ("            " . 16634) (16591 . 16629) ("        " . 16591) (16514 . 16556) ("            " . 16514) (16450 . 16488) ("        " . 16450) (16396 . 16430) ("    " . 16396) (16359 . 16393) ("    " . 16359) (16278 . 16316) ("        " . 16278) (16237 . 16275) ("        " . 16237) (16168 . 16210) ("            " . 16168) (16125 . 16163) ("        " . 16125) (16069 . 16111) ("            " . 16069) (16007 . 16045) ("        " . 16007) (15953 . 15987) ("    " . 15953) (15879 . 15913) ("    " . 15879) (15816 . 15850) ("    " . 15816) (15779 . 15813) ("    " . 15779) (15707 . 15745) ("        " . 15707) (15631 . 15669) ("        " . 15631) (15532 . 15570) ("        " . 15532) (15416 . 15454) ("        " . 15416) (15368 . 15406) ("        " . 15368) (15299 . 15333) ("    " . 15299) (15246 . 15276) (15150 . 15180) (15056 . 15086) (15013 . 15043) (14978 . 15008) (14930 . 14956) (14837 . 14863) (14799 . 14825) (14754 . 14780) (14713 . 14747) (14657 . 14691) (14616 . 14650) (14550 . 14584) (14442 . 14476) (14362 . 14396) (14268 . 14302) (14242 . 14264) (14220 . 14238) (14133 . 14147) (14107 . 14125) (14053 . 14071) ("	" . -13933) ("    " . -13927) (13927 . 13931) ("	" . 13927) (13923 . 13927) ("    " . -13895) (13895 . 13899) ("	" . 13895) (13891 . 13895) ("    " . -13861) (13861 . 13865) ("	" . 13861) (13857 . 13861) (nil rear-nonsticky nil 14538 . 14539) (nil fontified nil 13844 . 14539) (13844 . 14539) nil ("startup () {
	# info on any running screens
	if [[ -x $(which screen) ]]
	then
		ZSHRC_SCREENLIST=(${${(M)${(f)\"$(screen -ls)\"}:#(#s)[[:space:]]##([0-9]##).*}/(#b)[[:space:]]#([0-9]##).*/$match[1]})
		if [[ $#ZSHRC_SCREENLIST -ge 1 ]]
		then
			echo \"There are $#ZSHRC_SCREENLIST screens running. $ZSHRC_SCREENLIST\"
		fi
	fi

## TODO: Change to check /sys and build in rebuildrprompt()
##       maybe use /sys directly, if possible
#	# check if acpitool is installed. if yes, tell rebuildrprompt to use it
#	if [[ -x $(which acpitool) ]]
#	then
#		ZSHRC_ACPITOOL='1'
#	fi

	startup_warnings

	buildPS1


	# change the terminals title if it's a xterm, konsole or the like
	header \"%l %n@%m: %~\"
}" . 13844) (nil fontified t 14446 . 14448) (nil fontified t 14435 . 14436) (nil fontified t 14416 . 14417) (nil fontified t 14169 . 14170) (nil fontified t 13851 . 13857) (nil fontified t 13844 . 13851) (nil rear-nonsticky t 14538 . 14539) ("    " . 13857) (13861 . 13862) ("    " . 13861) (13861 . 13865) ("    " . 13891) (13895 . 13896) ("    " . 13895) (13895 . 13899) ("    " . 13923) (13927 . 13928) ("    " . 13927) (13927 . 13931) (13933 . 13934) ("                  " . 14053) ("                  " . 14107) ("              " . 14133) ("                  " . 14220) ("                      " . 14242) ("                                  " . 14268) ("                                  " . 14362) ("                                  " . 14442) ("                                  " . 14550) ("                                  " . 14616) ("                                  " . 14657) ("                                  " . 14713) ("                          " . 14754) ("                          " . 14799) ("                          " . 14837) ("                          " . 14930) ("                              " . 14978) ("                              " . 15013) ("                              " . 15056) ("                              " . 15150) ("                              " . 15246) (15299 . 15303) ("                                  " . 15299) (15368 . 15376) ("                                      " . 15368) (15416 . 15424) ("                                      " . 15416) (15532 . 15540) ("                                      " . 15532) (15631 . 15639) ("                                      " . 15631) (15707 . 15715) ("                                      " . 15707) (15779 . 15783) ("                                  " . 15779) (15816 . 15820) ("                                  " . 15816) (15879 . 15883) ("                                  " . 15879) (15953 . 15957) ("                                  " . 15953) (16007 . 16015) ("                                      " . 16007) (16069 . 16081) ("                                          " . 16069) (16125 . 16133) ("                                      " . 16125) (16168 . 16180) ("                                          " . 16168) (16237 . 16245) ("                                      " . 16237) (16278 . 16286) ("                                      " . 16278) (16359 . 16363) ("                                  " . 16359) (16396 . 16400) ("                                  " . 16396) (16450 . 16458) ("                                      " . 16450) (16514 . 16526) ("                                          " . 16514) (16591 . 16599) ("                                      " . 16591) (16634 . 16646) ("                                          " . 16634) (16711 . 16723) ("                                          " . 16711) (16775 . 16783) ("                                      " . 16775) (16816 . 16824) ("                                      " . 16816) (16884 . 16888) ("                                  " . 16884) ("                              " . 16920) ("                              " . 16955) ("                              " . 17029) (17076 . 17080) ("                                  " . 17076) ("                              " . 17135) ("                              " . 17215) (17288 . 17292) ("                                  " . 17288) ("                              " . 17328) ("                              " . 17375) ("                              " . 17442) ("                              " . 17523) ("                              " . 17606) (17671 . 17675) ("                                  " . 17671) ("                              " . 17708) ("                              " . 17741) ("                              " . 17779) ("                              " . 17873) ("                              " . 17969) ("                              " . 18012) ("                              " . 18207) ("                              " . 18252) ("                              " . 18295) ("                              " . 18355) ("                              " . 18388) ("                              " . 18456) ("                              " . 18498) ("                              " . 18531) ("                              " . 18600) (t 22022 51533 466356 682000) nil (18600 . 18630) (18531 . 18561) (18498 . 18528) (18456 . 18486) (18388 . 18418) (18355 . 18385) (18295 . 18325) (18252 . 18282) (18207 . 18237) (18012 . 18042) (17969 . 17999) (17873 . 17903) (17779 . 17809) (17741 . 17771) (17708 . 17738) (17671 . 17705) ("    " . 17671) (17606 . 17636) (17523 . 17553) (17442 . 17472) (17375 . 17405) (17328 . 17358) (17288 . 17322) ("    " . 17288) (17215 . 17245) (17135 . 17165) (17076 . 17110) ("    " . 17076) (17029 . 17059) (16955 . 16985) (16920 . 16950) (16884 . 16918) ("    " . 16884) (16816 . 16854) ("        " . 16816) (16775 . 16813) ("        " . 16775) (16711 . 16753) ("            " . 16711) (16634 . 16676) ("            " . 16634) (16591 . 16629) ("        " . 16591) (16514 . 16556) ("            " . 16514) (16450 . 16488) ("        " . 16450) (16396 . 16430) ("    " . 16396) (16359 . 16393) ("    " . 16359) (16278 . 16316) ("        " . 16278) (16237 . 16275) ("        " . 16237) (16168 . 16210) ("            " . 16168) (16125 . 16163) ("        " . 16125) (16069 . 16111) ("            " . 16069) (16007 . 16045) ("        " . 16007) (15953 . 15987) ("    " . 15953) (15879 . 15913) ("    " . 15879) (15816 . 15850) ("    " . 15816) (15779 . 15813) ("    " . 15779) (15707 . 15745) ("        " . 15707) (15631 . 15669) ("        " . 15631) (15532 . 15570) ("        " . 15532) (15416 . 15454) ("        " . 15416) (15368 . 15406) ("        " . 15368) (15299 . 15333) ("    " . 15299) (15246 . 15276) (15150 . 15180) (15056 . 15086) (15013 . 15043) (14978 . 15008) (14930 . 14956) (14837 . 14863) (14799 . 14825) (14754 . 14780) (14713 . 14747) (14657 . 14691) (14616 . 14650) (14550 . 14584) (14442 . 14476) (14362 . 14396) (14268 . 14302) (14242 . 14264) (14220 . 14238) (14133 . 14147) (14107 . 14125) (14053 . 14071) ("	" . -13933) ("    " . -13927) (13927 . 13931) ("	" . 13927) (13923 . 13927) ("    " . -13895) (13895 . 13899) ("	" . 13895) (13891 . 13895) ("    " . -13861) (13861 . 13865) ("	" . 13861) (13857 . 13861) (nil rear-nonsticky nil 14538 . 14539) (nil fontified nil 13844 . 14539) (13844 . 14539) (t 22022 51496 574358 326000) nil (nil rear-nonsticky nil 13841 . 13842) (nil fontified nil 13779 . 13842) (13779 . 13842) nil (13777 . 13779) (t 22022 51489 582358 638000) nil (nil rear-nonsticky nil 13776 . 13777) (nil fontified nil 12613 . 13777) (12613 . 13777) nil (12611 . 12617) (t 22022 51455 546360 156000) nil (nil rear-nonsticky nil 12610 . 12611) (nil fontified nil 9382 . 12611) (9382 . 12611) (t 22022 51435 930361 30000) nil (nil rear-nonsticky nil 9379 . 9380) (nil fontified nil 9361 . 9380) (9361 . 9380) nil (9360 . 9361) (t 22022 51427 866361 390000) nil (nil rear-nonsticky nil 9358 . 9359) (nil fontified nil 9298 . 9359) (9298 . 9359) nil (9297 . 9298) nil (9297 . 9301) (t 22022 51413 898362 12000) nil (8939 . 8940) (t 22022 51412 554362 72000) nil (9190 . 9192) (9124 . 9126) (9041 . 9043) (8940 . 8942) (t 22022 51397 418362 747000) nil (nil rear-nonsticky nil 9286 . 9287) (nil fontified nil 8940 . 9287) (8940 . 9287) (t 22022 51363 274364 269000) nil (nil rear-nonsticky nil 8938 . 8939) (nil fontified nil 8875 . 8939) (8875 . 8939) nil (8872 . 8875) (t 22022 51348 706364 919000) nil (nil rear-nonsticky nil 8871 . 8872) (nil fontified nil 8255 . 8872) (8255 . 8872) nil (8254 . 8255) (t 22022 51324 658365 991000) nil ("
" . -8399) (t 22022 51322 718366 78000) nil (8254 . 8256) (t 22022 51321 490366 132000) nil (8258 . 8260) (t 22022 51317 818366 296000) nil (7368 . 7370) nil (7368 . 7375) nil ("s" . -7368) nil ("e" . -7369) nil ("t" . -7370) nil ("t" . -7371) nil ("i" . -7372) nil ("n" . -7373) nil ("g" . -7374) (t 22022 51302 434366 982000) nil (27 . 40) nil (26 . 27) (t 22022 51296 938367 227000) nil (nil rear-nonsticky nil 67 . 68) (nil fontified nil 53 . 68) (nil fontified nil 52 . 53) (nil fontified nil 50 . 52) (nil fontified nil 45 . 50) (nil fontified nil 42 . 45) (nil fontified nil 36 . 42) (nil fontified nil 35 . 36) (nil fontified nil 27 . 35) (27 . 68) nil (26 . 28) nil ("function exists { which $1 &> /dev/null }" . 8336) (t 22022 51284 6367 804000) nil ("#" . 7721) nil (" " . -7721) 7721 nil ("    " . -10115) ("    " . -10076) ("    " . -10073) ("    " . -10061) ("    " . -10023) ("    " . -10020) ("    " . -9990) ("    " . -9977) ("    " . -9962) ("    " . -9797) ("    " . -9784) ("    " . -9718) ("    " . -9654) ("    " . -9646) ("    " . -9643) ("    " . -9640) ("    " . -9601) ("    " . -9548) ("    " . -9497) ("    " . -9460) ("    " . -9443) ("    " . -9437) ("    " . -9390) ("    " . -9340) ("    " . -9315) ("    " . -9294) ("    " . -9250) ("    " . -9245) ("    " . -9243) ("    " . -9209) ("    " . -9198) ("    " . -9168) ("    " . -9121) ("    " . -9104) ("    " . -9061) ("    " . -9023) ("    " . -8995) ("    " . -8988) ("    " . -8941) ("    " . -8930) ("    " . -8895) ("    " . -8878) ("    " . -8856) ("    " . -8820) 7832 nil ("    " . -8792) ("    " . -8748) ("    " . -8715) ("    " . -8708) ("    " . -8670) ("    " . -8624) ("    " . -8555) ("    " . -8469) ("    " . -8451) ("    " . -8408) ("    " . -8381) ("    " . -8338) ("    " . -8273) ("    " . -8209) ("    " . -8198) ("    " . -8146) ("    " . -8088) ("    " . -8023) ("    " . -7977) ("    " . -7888) ("    " . -7833) 7833 (t 22022 51271 786368 348000) nil ("    " . -7829) (7835 . 7836) nil (7834 . 7835) nil (7833 . 7834) nil ("i" . -7833) nil ("f" . -7834) nil (7834 . 7835) nil (7829 . 7833) (7829 . 7830) nil (10371 . 10372) (10328 . 10329) (10321 . 10322) (10305 . 10306) (10263 . 10264) (10256 . 10257) (10222 . 10223) (10205 . 10206) (10186 . 10187) (10017 . 10018) (10000 . 10001) (9930 . 9931) (9862 . 9863) (9850 . 9851) (9843 . 9844) (9829 . 9837) ("       " . 9829) (9793 . 9794) (9736 . 9737) (9681 . 9682) (9640 . 9641) (9619 . 9620) (9602 . 9610) ("       " . 9602) (9558 . 9559) (9504 . 9505) (9468 . 9476) ("       " . 9468) (9450 . 9451) (9402 . 9403) (9393 . 9394) (9380 . 9388) ("       " . 9380) (9349 . 9350) (9334 . 9335) (9285 . 9301) ("               " . 9285) (9234 . 9250) ("               " . 9234) (9228 . 9229) (9166 . 9182) ("               " . 9166) (9139 . 9140) (9100 . 9108) ("       " . 9100) (9089 . 9097) ("       " . 9089) (9045 . 9046) (9030 . 9031) (8976 . 8992) ("               " . 8976) (8970 . 8971) (8929 . 8945) ("               " . 8929) (8904 . 8905) (8865 . 8873) ("       " . 8865) (8817 . 8825) ("       " . 8817) (8780 . 8788) ("       " . 8780) (8769 . 8777) ("       " . 8769) (8734 . 8735) (8684 . 8685) (8611 . 8612) (8521 . 8522) (8499 . 8500) (8445 . 8453) ("       " . 8445) (8421 . 8422) (8374 . 8375) (8305 . 8306) (8237 . 8238) (8222 . 8223) (8166 . 8167) (8104 . 8105) (8035 . 8036) (7985 . 7986) (7892 . 7893) (7833 . 7834) (7721 . 7722) (7714 . 7717) nil (7708 . 7714) nil (7706 . 7708) nil (7700 . 7706) ("ex" . -7700) nil (7701 . 7702) nil (10287 . 10290) (10245 . 10248) (10239 . 10242) (10224 . 10227) (10183 . 10186) (10177 . 10180) (10144 . 10147) (10128 . 10131) (10110 . 10113) (9942 . 9945) (9926 . 9929) (9857 . 9860) (9790 . 9793) (9779 . 9782) (9773 . 9776) (9767 . 9770) (9725 . 9728) (9669 . 9672) (9615 . 9618) (9575 . 9578) (9555 . 9558) (9546 . 9549) (9496 . 9499) (9443 . 9446) (9415 . 9418) (9391 . 9394) (9344 . 9347) (9336 . 9339) (9331 . 9334) (9294 . 9297) (9280 . 9283) (9247 . 9250) (9197 . 9200) (9177 . 9180) (9131 . 9134) (9090 . 9093) (9059 . 9062) (9049 . 9052) (8999 . 9002) (8985 . 8988) (8947 . 8950) (8927 . 8930) (8902 . 8905) (8863 . 8866) (8832 . 8835) (8785 . 8788) (8749 . 8752) (8739 . 8742) (8698 . 8701) (8649 . 8652) (8577 . 8580) (8488 . 8491) (8467 . 8470) (8421 . 8424) (8391 . 8394) (8345 . 8348) (8277 . 8280) (8210 . 8213) (8196 . 8199) (8141 . 8144) (8080 . 8083) (8012 . 8015) (7963 . 7966) (7871 . 7874) (7813 . 7816) (7702 . 7705) (7698 . 7701) nil (7697 . 7698) nil (7696 . 7697) (t 22022 51195 118371 767000) nil (8178 . 8180) nil ("O" . -8178) nil ("n" . -8179) (t 22022 51193 14371 860000) nil (8174 . 8180) nil ("C" . -8174) nil ("U" . -8175) nil ("N" . -8176) nil ("T" . -8177) nil ("I" . -8178) nil ("O" . -8179) nil ("N" . -8180) (t 22022 51189 710372 8000) nil (8173 . 8181) nil ("f" . -8173) nil ("u" . -8174) nil ("n" . -8175) nil ("c" . -8176) nil ("t" . -8177) nil ("i" . -8178) nil ("o" . -8179) nil ("n" . -8180) (t 22022 51179 162372 478000) nil ("                        " . -7949) (nil rear-nonsticky nil 8191 . 8192) (nil fontified nil 7805 . 8192) (7805 . 8192) nil (7804 . 7805) (t 22022 51168 534372 952000) nil (9258 . 9262) nil ("m" . -9258) nil ("i" . -9259) nil ("s" . -9260) nil ("c" . -9261) (t 22022 51107 810375 659000) nil (8903 . 8912) (t 22022 51104 198375 820000) nil ("    " . -9240) (9240 . 9244) ("	" . 9240) (9236 . 9240) ("	" . -9201) ("	" . -9148) ("	" . -9097) ("	" . -9060) ("	" . -9043) ("    " . -9037) (9037 . 9041) ("	" . 9037) (9033 . 9037) ("	" . -8990) ("	" . -8940) ("    " . -8915) (8915 . 8919) ("	" . 8915) (8911 . 8915) (nil rear-nonsticky nil 9241 . 9242) (nil fontified nil 8858 . 9242) (8858 . 9242) nil (8856 . 8858) (t 22022 51056 250377 958000) nil (7489 . 7490) (t 22022 51054 982378 14000) nil (nil rear-nonsticky nil 7556 . 7557) (nil fontified nil 7490 . 7557) (7490 . 7557) (t 22022 51024 190379 387000) nil ("
function arith-eval-echo() {
    LBUFFER=\"${LBUFFER}echo \\$(( \"
    RBUFFER=\" ))$RBUFFER\"
}
bindkey \"^[[21~\" arith-eval-echo
" . 8789) (t 22022 50919 374384 60000) nil (8790 . 8799) (t 22022 50905 278384 689000) nil ("  " . -8873) ("#" . 8873) (t 22022 50903 726384 758000) nil (nil rear-nonsticky nil 8907 . 8908) (nil fontified nil 8873 . 8908) (8873 . 8908) nil (8873 . 8874) (t 22022 50878 946385 863000) nil (8847 . 8849) (8812 . 8814) (nil rear-nonsticky nil 8867 . 8868) (nil fontified nil 8790 . 8868) (8790 . 8868) (t 22022 50855 390386 913000) nil (6764 . 6765) nil ("  " . -6699) ("#" . 6699) nil ("  " . -6633) ("#" . 6633) (t 22022 50850 186387 145000) nil (nil rear-nonsticky nil 6769 . 6770) (nil fontified nil 6633 . 6770) (6633 . 6770) (t 22022 50838 518387 665000) nil (6567 . 6568) nil ("b" . 6567) nil ("  " . -6567) ("#" . 6567) nil (nil rear-nonsticky nil 6634 . 6635) (nil fontified nil 6567 . 6635) (6567 . 6635) nil (6566 . 6567) nil ("	" . -5962) ("	" . -5908) ("	" . -5860) ("	" . -5812) ("	" . -5763) ("    " . -5757) (5757 . 5761) ("	" . 5757) (5753 . 5757) ("	" . -5689) ("	" . -5627) ("	" . -5566) ("	" . -5504) ("	" . -5453) ("	" . -5405) ("	" . -5357) ("	" . -5308) ("    " . -5299) (5299 . 5303) ("	" . 5299) (5295 . 5299) ("	" . -5241) ("	" . -5167) ("	" . -5106) ("	" . -5044) ("	" . -4996) ("	" . -4947) ("    " . -4940) (4940 . 4944) ("	" . 4940) (4936 . 4940) ("	" . -4859) ("	" . -4798) ("	" . -4736) ("	" . -4688) ("	" . -4639) ("	" . -4588) ("	" . -4540) ("	" . -4492) ("	" . -4443) ("    " . -4434) (4434 . 4438) ("	" . 4434) (4430 . 4434) ("	" . -4374) ("	" . -4326) ("	" . -4276) ("	" . -4226) ("    " . -4202) (4202 . 4206) ("	" . 4202) (4198 . 4202) 6583 nil (6251 . 6252) (t 22022 50805 818389 123000) nil (6146 . 6147) (6118 . 6119) (6090 . 6091) (6064 . 6065) (" " . -6550) (" " . -6489) (" " . -6429) (" " . -6391) (" " . -6298) (" " . -6258) ("'" . -6247) nil (" " . 6248) 6249 (t 22022 50801 314389 324000) nil ("#" . -6168) ("# " . -6140) ("# " . -6113) ("# " . -6086) ("# " . -6061) ("#" . -6040) 6039 (t 22022 50798 790389 437000) nil (nil rear-nonsticky nil 6180 . 6181) (nil fontified nil 6040 . 6181) (6040 . 6181) nil (6038 . 6040) (t 22022 50785 302390 38000) nil ("# " . -6424) ("# " . -6362) ("# " . -6301) ("# " . -6262) ("## " . -6213) ("# " . -6168) ("# " . -6127) 6127 (t 22022 50777 490390 386000) nil (nil rear-nonsticky nil 6467 . 6468) (nil fontified nil 6039 . 6468) (6039 . 6468) nil (6038 . 6039) (t 22022 50588 454398 814000) nil (nil rear-nonsticky nil 6037 . 6038) (nil fontified nil 4182 . 6038) (4182 . 6038) (t 22022 50368 854408 605000) nil (5047 . 5048) (t 22022 50258 302413 534000) nil (nil rear-nonsticky nil 4666 . 4667) (nil fontified nil 4608 . 4667) (4608 . 4667) nil (4607 . 4608) (t 22022 49952 770427 156000) nil (5092 . 5094) (t 22022 49950 910427 239000) nil (4983 . 4986) nil (4977 . 4983) nil ("m" . -4977) nil (4975 . 4978) nil (";" . -4975) nil (4973 . 4976) nil (5074 . 5079) nil (nil rear-nonsticky nil 5073 . 5074) (nil fontified nil 4974 . 5074) (4974 . 5074) (t 22022 49783 862434 686000) nil (nil rear-nonsticky nil 4180 . 4181) (nil fontified nil 4180 . 4181) (nil fontified nil 4178 . 4180) (nil fontified nil 4164 . 4178) (nil fontified nil 4141 . 4164) (nil fontified nil 4131 . 4141) (nil fontified nil 4124 . 4131) (nil fontified nil 4116 . 4124) (nil fontified nil 4112 . 4116) (nil fontified nil 4107 . 4112) (nil fontified nil 4090 . 4107) (nil fontified nil 4064 . 4090) (nil fontified nil 4040 . 4064) (nil fontified nil 4030 . 4040) (nil fontified nil 4023 . 4030) (nil fontified nil 4015 . 4023) (nil fontified nil 4011 . 4015) (nil fontified nil 4007 . 4011) (nil fontified nil 3989 . 4007) (nil fontified nil 3968 . 3989) (nil fontified nil 3945 . 3968) (nil fontified nil 3935 . 3945) (nil fontified nil 3928 . 3935) (nil fontified nil 3920 . 3928) (nil fontified nil 3916 . 3920) (nil fontified nil 3911 . 3916) (nil fontified nil 3894 . 3911) (nil fontified nil 3868 . 3894) (nil fontified nil 3844 . 3868) (nil fontified nil 3834 . 3844) (nil fontified nil 3827 . 3834) (nil fontified nil 3819 . 3827) (nil fontified nil 3815 . 3819) (nil fontified nil 3811 . 3815) (nil fontified nil 3793 . 3811) (nil fontified nil 3768 . 3793) (nil fontified nil 3744 . 3768) (nil fontified nil 3734 . 3744) (nil fontified nil 3727 . 3734) (nil fontified nil 3719 . 3727) (nil fontified nil 3715 . 3719) (nil fontified nil 3711 . 3715) (nil fontified nil 3693 . 3711) (nil fontified nil 3669 . 3693) (nil fontified nil 3645 . 3669) (nil fontified nil 3635 . 3645) (nil fontified nil 3628 . 3635) (nil fontified nil 3620 . 3628) (nil fontified nil 3616 . 3620) (nil fontified nil 3612 . 3616) (nil fontified nil 3594 . 3612) (nil fontified nil 3587 . 3594) (nil fontified nil 3565 . 3587) (nil fontified nil 3541 . 3565) (nil fontified nil 3531 . 3541) (nil fontified nil 3524 . 3531) (nil fontified nil 3516 . 3524) (nil fontified nil 3512 . 3516) (nil fontified nil 3508 . 3512) (nil fontified nil 3490 . 3508) (nil fontified nil 3463 . 3490) (nil fontified nil 3439 . 3463) (nil fontified nil 3429 . 3439) (nil fontified nil 3422 . 3429) (nil fontified nil 3414 . 3422) (nil fontified nil 3410 . 3414) (nil fontified nil 3406 . 3410) (nil fontified nil 3388 . 3406) (nil fontified nil 3381 . 3388) (nil fontified nil 3367 . 3381) (nil fontified nil 3365 . 3367) (nil fontified nil 3336 . 3365) (nil fontified nil 3318 . 3336) (nil fontified nil 3308 . 3318) (nil fontified nil 3301 . 3308) (nil fontified nil 3287 . 3301) (nil fontified nil 3269 . 3287) (nil fontified nil 3236 . 3269) (nil fontified nil 3218 . 3236) (nil fontified nil 3208 . 3218) (nil fontified nil 3201 . 3208) (nil fontified nil 3187 . 3201) (nil fontified nil 3169 . 3187) (nil fontified nil 3128 . 3169) (nil fontified nil 3110 . 3128) (nil fontified nil 3100 . 3110) (nil fontified nil 3093 . 3100) (nil fontified nil 3079 . 3093) (nil fontified nil 3061 . 3079) (nil fontified nil 3051 . 3061) (nil fontified nil 3022 . 3051) (nil fontified nil 3004 . 3022) (nil fontified nil 2994 . 3004) (nil fontified nil 2987 . 2994) (nil fontified nil 2973 . 2987) (nil fontified nil 2955 . 2973) (nil fontified nil 2921 . 2955) (nil fontified nil 2904 . 2921) (nil fontified nil 2894 . 2904) (nil fontified nil 2887 . 2894) (nil fontified nil 2872 . 2887) (nil fontified nil 2855 . 2872) (nil fontified nil 2815 . 2855) (nil fontified nil 2798 . 2815) (nil fontified nil 2788 . 2798) (nil fontified nil 2781 . 2788) (nil fontified nil 2766 . 2781) (nil fontified nil 2749 . 2766) (nil fontified nil 2716 . 2749) (nil fontified nil 2698 . 2716) (nil fontified nil 2688 . 2698) (nil fontified nil 2681 . 2688) (nil fontified nil 2667 . 2681) (nil fontified nil 2649 . 2667) (nil fontified nil 2616 . 2649) (nil fontified nil 2599 . 2616) (nil fontified nil 2589 . 2599) (nil fontified nil 2582 . 2589) (nil fontified nil 2567 . 2582) (nil fontified nil 2550 . 2567) (nil fontified nil 2540 . 2550) (nil fontified nil 2512 . 2540) (nil fontified nil 2494 . 2512) (nil fontified nil 2484 . 2494) (nil fontified nil 2477 . 2484) (nil fontified nil 2463 . 2477) (nil fontified nil 2445 . 2463) (nil fontified nil 2435 . 2445) (nil fontified nil 2413 . 2435) (nil fontified nil 2395 . 2413) (nil fontified nil 2385 . 2395) (nil fontified nil 2378 . 2385) (nil fontified nil 2364 . 2378) (nil fontified nil 2346 . 2364) (nil fontified nil 2314 . 2346) (nil fontified nil 2296 . 2314) (nil fontified nil 2286 . 2296) (nil fontified nil 2279 . 2286) (nil fontified nil 2265 . 2279) (nil fontified nil 2247 . 2265) (nil fontified nil 2217 . 2247) (nil fontified nil 2200 . 2217) (nil fontified nil 2190 . 2200) (nil fontified nil 2183 . 2190) (nil fontified nil 2168 . 2183) (nil fontified nil 2151 . 2168) (nil fontified nil 2141 . 2151) (nil fontified nil 2116 . 2141) (nil fontified nil 2098 . 2116) (nil fontified nil 2088 . 2098) (nil fontified nil 2081 . 2088) (nil fontified nil 2067 . 2081) (nil fontified nil 2049 . 2067) (nil fontified nil 2039 . 2049) (nil fontified nil 2020 . 2039) (nil fontified nil 2002 . 2020) (nil fontified nil 1992 . 2002) (nil fontified nil 1985 . 1992) (nil fontified nil 1971 . 1985) (nil fontified nil 1953 . 1971) (nil fontified nil 1943 . 1953) (nil fontified nil 1942 . 1943) (nil fontified nil 1938 . 1942) (nil fontified nil 1924 . 1938) (nil fontified nil 1917 . 1924) (nil fontified nil 1913 . 1917) (nil fontified nil 1911 . 1913) (nil fontified nil 1910 . 1911) (1910 . 4181) nil (1909 . 1912) nil ("
if [[ \"$TERM\" != emacs ]]; then
    [[ -z \"$terminfo[kdch1]\" ]]        || bindkey -M emacs \"$terminfo[kdch1]\"       delete-char
    [[ -z \"$terminfo[khome]\" ]]        || bindkey -M emacs \"$terminfo[khome]\"       beginning-of-line
    [[ -z \"$terminfo[kend]\"  ]]        || bindkey -M emacs \"$terminfo[kend]\"        end-of-line
    [[ -z \"$terminfo[kich1]\" ]]        || bindkey -M emacs \"$terminfo[kich1]\"       overwrite-mode
    [[ -z \"$terminfo[kdch1]\" ]]        || bindkey -M vicmd \"$terminfo[kdch1]\"       vi-delete-char
    [[ -z \"$terminfo[khome]\" ]]        || bindkey -M vicmd \"$terminfo[khome]\"       vi-beginning-of-line
    [[ -z \"$terminfo[kend]\"  ]]        || bindkey -M vicmd \"$terminfo[kend]\"        vi-end-of-line
    [[ -z \"$terminfo[kich1]\" ]]        || bindkey -M vicmd \"$terminfo[kich1]\"       overwrite-mode

    [[ -z \"$terminfo[cuu1]\"  ]]        || bindkey -M viins \"$terminfo[cuu1]\"        vi-up-line-or-history
    [[ -z \"$terminfo[cuf1]\"  ]]        || bindkey -M viins \"$terminfo[cuf1]\"        vi-forward-char
    [[ -z \"$terminfo[kcuu1]\" ]]        || bindkey -M viins \"$terminfo[kcuu1]\"       vi-up-line-or-history
    [[ -z \"$terminfo[kcud1]\" ]]        || bindkey -M viins \"$terminfo[kcud1]\"       vi-down-line-or-history
    [[ -z \"$terminfo[kcuf1]\" ]]        || bindkey -M viins \"$terminfo[kcuf1]\"       vi-forward-char
    [[ -z \"$terminfo[kcub1]\" ]]        || bindkey -M viins \"$terminfo[kcub1]\"       vi-backward-char

    # ncurses stuff
    [[ \"$terminfo[kcuu1]\" == \"O\"* ]] && bindkey -M viins \"${terminfo[kcuu1]/O/[}\" up-line-or-history
    [[ \"$terminfo[kcud1]\" == \"O\"* ]] && bindkey -M viins \"${terminfo[kcud1]/O/[}\" down-line-or-history
    [[ \"$terminfo[kcuf1]\" == \"O\"* ]] && bindkey -M viins \"${terminfo[kcuf1]/O/[}\" vi-forward-char
    [[ \"$terminfo[kcub1]\" == \"O\"* ]] && bindkey -M viins \"${terminfo[kcub1]/O/[}\" vi-backward-char
    [[ \"$terminfo[khome]\" == \"O\"* ]] && bindkey -M viins \"${terminfo[khome]/O/[}\" beginning-of-line
    [[ \"$terminfo[kend]\"  == \"O\"* ]] && bindkey -M viins \"${terminfo[kend]/O/[}\"  end-of-line
    [[ \"$terminfo[khome]\" == \"O\"* ]] && bindkey -M emacs \"${terminfo[khome]/O/[}\" beginning-of-line
    [[ \"$terminfo[kend]\"  == \"O\"* ]] && bindkey -M emacs \"${terminfo[kend]/O/[}\"  end-of-line
fi
" . 4248) 6519 (t 22022 49749 554436 216000) nil (3759 . 3762) nil ("u" . -3759) nil (3758 . 3760) nil ("f" . -3758) nil ("u" . -3759) nil ("n" . -3760) nil ("c" . -3761) nil ("t" . -3762) nil ("i" . -3763) nil ("o" . -3764) nil ("n" . -3765) nil (nil fontified nil 3894 . 3895) (nil fontified nil 3893 . 3894) (nil fontified nil 3832 . 3893) (nil fontified nil 3831 . 3832) (nil fontified nil 3830 . 3831) (nil fontified nil 3829 . 3830) (nil fontified nil 3768 . 3829) (nil fontified nil 3767 . 3768) (nil fontified nil 3766 . 3767) (nil fontified nil 3758 . 3766) (nil fontified nil 3757 . 3758) (nil fontified nil 3756 . 3757) (nil fontified nil 3755 . 3756) (3755 . 3895) (t 22022 49721 726437 457000) nil (nil rear-nonsticky nil 1577 . 1578) (nil fontified nil 1577 . 1578) (nil fontified nil 1567 . 1577) (nil fontified nil 1563 . 1567) (nil fontified nil 1553 . 1563) (nil fontified nil 1552 . 1553) (nil fontified nil 1546 . 1552) (nil fontified nil 1541 . 1546) (nil fontified nil 1535 . 1541) (nil fontified nil 1534 . 1535) (nil fontified nil 1528 . 1534) (nil fontified nil 1521 . 1528) (nil fontified nil 1517 . 1521) (nil fontified nil 1516 . 1517) (nil fontified nil 1510 . 1516) (nil fontified nil 1487 . 1510) (nil fontified nil 1483 . 1487) (nil fontified nil 1479 . 1483) (nil fontified nil 1471 . 1479) (nil fontified nil 1467 . 1471) (nil fontified nil 1466 . 1467) (nil fontified nil 1460 . 1466) (nil fontified nil 1408 . 1460) (nil fontified nil 1407 . 1408) (1407 . 1578) nil (1406 . 1407) nil ("#fix arrow keys that display A B C D on remote shell
export term=cons25
[[ $TERM == eterm-color  ]] && export TERM=xterm
export EDITOR=vim
export PYTHONPATH=.:$PYTHONPATH
" . 3584) (t 22022 49701 106438 376000) nil ("
" . -3119) nil ("    " . 3120) 3124 (t 22022 49695 910438 608000) nil (3115 . 3119) (3572 . 3576) (3534 . 3542) ("    " . 3534) (3523 . 3531) ("    " . 3523) (3497 . 3501) (3450 . 3454) (3429 . 3437) ("    " . 3429) (3390 . 3394) (3348 . 3356) ("    " . 3348) (3324 . 3328) (3317 . 3321) (3266 . 3274) ("    " . 3266) (3255 . 3263) ("    " . 3255) (3224 . 3228) (3203 . 3211) ("    " . 3203) (3185 . 3189) (3145 . 3153) ("    " . 3145) (3121 . 3125) (nil rear-nonsticky nil 3508 . 3509) (nil fontified nil 3508 . 3509) (nil fontified nil 3507 . 3508) (nil fontified nil 3506 . 3507) (nil fontified nil 3491 . 3506) (nil fontified nil 3486 . 3491) (nil fontified nil 3473 . 3486) (nil fontified nil 3471 . 3473) (nil fontified nil 3466 . 3471) (nil fontified nil 3461 . 3466) (nil fontified nil 3450 . 3461) (nil fontified nil 3449 . 3450) (nil fontified nil 3437 . 3449) (nil fontified nil 3424 . 3437) (nil fontified nil 3422 . 3424) (nil fontified nil 3410 . 3422) (nil fontified nil 3409 . 3410) (nil fontified nil 3407 . 3409) (nil fontified nil 3402 . 3407) (nil fontified nil 3393 . 3402) (nil fontified nil 3389 . 3393) (nil fontified nil 3385 . 3389) (nil fontified nil 3372 . 3385) (nil fontified nil 3370 . 3372) (nil fontified nil 3358 . 3370) (nil fontified nil 3356 . 3358) (nil fontified nil 3355 . 3356) (nil fontified nil 3350 . 3355) (nil fontified nil 3341 . 3350) (nil fontified nil 3337 . 3341) (nil fontified nil 3332 . 3337) (nil fontified nil 3328 . 3332) (nil fontified nil 3324 . 3328) (nil fontified nil 3323 . 3324) (nil fontified nil 3318 . 3323) (nil fontified nil 3316 . 3318) (nil fontified nil 3307 . 3316) (nil fontified nil 3301 . 3307) (nil fontified nil 3300 . 3301) (nil fontified nil 3292 . 3300) (nil fontified nil 3288 . 3292) (nil fontified nil 3274 . 3288) (nil fontified nil 3267 . 3274) (nil fontified nil 3261 . 3267) (nil fontified nil 3259 . 3261) (nil fontified nil 3255 . 3259) (nil fontified nil 3241 . 3255) (nil fontified nil 3239 . 3241) (nil fontified nil 3234 . 3239) (nil fontified nil 3215 . 3234) (nil fontified nil 3214 . 3215) (nil fontified nil 3208 . 3214) (nil fontified nil 3199 . 3208) (nil fontified nil 3195 . 3199) (nil fontified nil 3183 . 3195) (nil fontified nil 3177 . 3183) (nil fontified nil 3168 . 3177) (nil fontified nil 3164 . 3168) (nil fontified nil 3159 . 3164) (nil fontified nil 3157 . 3159) (nil fontified nil 3153 . 3157) (nil fontified nil 3152 . 3153) (nil fontified nil 3147 . 3152) (nil fontified nil 3145 . 3147) (nil fontified nil 3136 . 3145) (nil fontified nil 3130 . 3136) (nil fontified nil 3129 . 3130) (nil fontified nil 3121 . 3129) (nil fontified nil 3120 . 3121) (3120 . 3509) nil (3116 . 3120) ("    " . 3115) (3114 . 3120) nil ("
function ppgrep() {
    if [[ $1 == \"\" ]]; then
        PERCOL=percol
    else
        PERCOL=\"percol --query $1\"
    fi
    ps aux | eval $PERCOL | awk '{ print $2 }'
}

function ppkill() {
    if [[ $1 =~ \"^-\" ]]; then
        QUERY=\"\"            # options only
    else
        QUERY=$1            # with a query
        [[ $# > 0 ]] && shift
    fi
    ppgrep $QUERY | xargs kill $*
}" . 3118) (t 22022 49678 738439 373000) nil (2535 . 2540) nil ("t" . -2535) nil ("c" . -2536) nil ("i" . -2537) nil ("o" . -2538) nil ("n" . -2539) (t 22022 49676 702439 464000) nil (2533 . 2540) nil ("c" . -2533)))
